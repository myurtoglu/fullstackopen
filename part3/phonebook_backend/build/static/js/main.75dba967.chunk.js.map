{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","Persons","persons","searchQuery","remove","filter","toLowerCase","includes","map","key","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","handleSearchQueryChange","Notification","message","className","ErrorNotification","baseUrl","axios","get","then","result","data","newEntry","post","id","delete","newObject","put","App","useState","setPersons","setNewName","setNewNumber","setSearchQuery","setMessage","errorMessage","setErrorMessage","useEffect","phonebook","event","target","preventDefault","filteredPersons","length","window","confirm","filteredPerson","updatedPerson","setTimeout","catch","error","newPerson","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75dba967.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, handleDelete }) => (\n  <div>{person.name} {person.number} <button onClick={handleDelete}>delete</button></div>\n)\n\nconst Persons = ({ persons, searchQuery, remove }) => {\n  return persons\n    .filter(\n      person => person.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    .map(\n      person =>\n        <Person key={person.name}\n                person={person}\n                handleDelete={() => remove(person)}\n        />\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input \n        value={props.searchQuery}\n        onChange={props.handleSearchQueryChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"errorNotification\">\n      {message}\n    </div>\n  )\n}\n\nexport { Notification, ErrorNotification }","import axios from 'axios'\n\nconst baseUrl = 'api/persons'\n\nconst getAll = () => axios.get(baseUrl).then(result => result.data)\n\nconst create = (newEntry) =>\n  axios.post(baseUrl, newEntry).then(result => result.data)\n\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`)\n\nconst update = (id, newObject) =>\n  axios.put(`${baseUrl}/${id}`, newObject).then(result => result.data)\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Persons from \"./components/Persons\"\nimport PersonForm from \"./components/PersonForm\"\nimport Filter from \"./components/Filter\"\nimport { Notification, ErrorNotification } from \"./components/Notification\"\nimport phonebook from \"./services/phonebook\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchQuery, setSearchQuery ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearchQueryChange = (event) => setSearchQuery(event.target.value)\n  const remove = (personToDelete) => {\n    if (window.confirm(`Delete ${personToDelete.name} ?`)) { \n      phonebook\n        .remove(personToDelete.id)\n        .then(setPersons(\n          persons.filter(person => personToDelete.id !== person.id))\n      )\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const filteredPersons = persons.filter(person => person.name === newName)\n    if (filteredPersons.length > 0) {\n      // Person entry with the same name already exists, update their number.\n      if (window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`)\n      ) {\n        const filteredPerson = filteredPersons[0]\n        phonebook\n          .update(filteredPerson.id, { ...filteredPerson, number: newNumber})\n          .then(updatedPerson => {\n            setPersons(\n              persons.map(person => person.id === filteredPerson.id ? updatedPerson : person))\n            setMessage(`${newName}'s phone number updated to ${newNumber}`)\n            setTimeout(() => setMessage(null), 5000)\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => setErrorMessage(null), 5000)\n          })\n      } \n    } else {\n      const newPerson = { name: newName, number: newNumber }\n      phonebook\n        .create(newPerson)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setMessage(`Added ${newPerson.name}`)\n          setTimeout(() => setMessage(null), 5000)\n        })\n    }\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  useEffect(() => {\n    phonebook.getAll().then(persons => setPersons(persons))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorNotification message={errorMessage} />\n      <Filter\n        searchQuery={searchQuery}\n        handleSearchQueryChange={handleSearchQueryChange}/>\n      <h3>add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={persons} searchQuery={searchQuery} remove={remove}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}